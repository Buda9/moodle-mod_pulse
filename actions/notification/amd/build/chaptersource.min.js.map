{"version":3,"file":"chaptersource.min.js","sources":["../src/chaptersource.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Frameworks datasource.\r\n *\r\n * This module is compatible with core/form-autocomplete.\r\n *\r\n * @module     tool_lp/frameworks_datasource\r\n * @copyright  2016 Frédéric Massart - FMCorz.net\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\ndefine(['jquery', 'core/ajax', 'core/notification', 'core/modal_factory', 'core/fragment', 'core/str', 'core/modal_events'],\r\n    function($, Ajax, Notification, ModalFactory, Fragment, Str, ModalEvents) {\r\n\r\n\r\n    const previewModalBody = function(contextID, userid=null) {\r\n\r\n        if (window.tinyMCE !== undefined) {\r\n            // editorPlugin = window.tinyMCE;\r\n            var params = {\r\n                contentheader: window.tinyMCE.get('id_pulsenotification_headercontent_editor').getContent(),\r\n                contentstatic: window.tinyMCE.get('id_pulsenotification_staticcontent_editor').getContent(),\r\n                contentfooter: window.tinyMCE.get('id_pulsenotification_footercontent_editor').getContent(),\r\n                userid: userid\r\n            };\r\n        } else {\r\n            // editorPlugin = document;\r\n            var params = {\r\n                contentheader: document.querySelector('#id_pulsenotification_headercontent_editoreditable').innerHTML,\r\n                contentstatic: document.querySelector('#id_pulsenotification_staticcontent_editoreditable').innerHTML,\r\n                contentfooter: document.querySelector('#id_pulsenotification_footercontent_editoreditable').innerHTML,\r\n                userid: userid\r\n            };\r\n        }\r\n\r\n        var dynamicparams = {};\r\n        if (document.querySelector('[name=pulsenotification_dynamiccontent]') !== null) {\r\n            dynamicparams = {\r\n                contentdynamic: document.querySelector('[name=pulsenotification_dynamiccontent]').value,\r\n                contenttype: document.querySelector('[name=pulsenotification_contenttype]').value,\r\n                chapterid: document.querySelector('[name=pulsenotification_chapterid]').value,\r\n                contentlength: document.querySelector('[name=pulsenotification_contentlength]').value,\r\n            };\r\n        }\r\n\r\n        return Fragment.loadFragment('pulseaction_notification', 'preview_content', contextID, {...params, ...dynamicparams});\r\n    }\r\n\r\n    const previewModal = function(contextID) {\r\n\r\n        ModalFactory.create({\r\n            title: Str.get_string('preview', 'pulseaction_notification'),\r\n            body: previewModalBody(contextID),\r\n            large: true,\r\n        }).then((modal) => {\r\n            modal.show();\r\n\r\n            modal.getRoot().on(ModalEvents.bodyRendered, function() {\r\n                modal.getRoot().get(0).querySelector('[name=userselector]').addEventListener('change', (e) => {\r\n                    e.preventDefault();\r\n                    var target = e.target;\r\n                    modal.setBody(previewModalBody(contextID, target.value));\r\n                })\r\n            })\r\n        });\r\n    };\r\n\r\n    const notificationModal = function(contextID, instance, userid) {\r\n\r\n        var params = {\r\n            instanceid: instance,\r\n            userid: userid\r\n        };\r\n\r\n        ModalFactory.create({\r\n            title: Str.get_string('preview', 'pulseaction_notification'),\r\n            body: Fragment.loadFragment('pulseaction_notification', 'preview_instance_content', contextID, params),\r\n            large: true,\r\n        }).then((modal) => {\r\n            modal.show();\r\n\r\n            /* modal.getRoot().on(ModalEvents.bodyRendered, function() {\r\n                modal.getRoot().get(0).querySelector('[name=userselector]').addEventListener('change', (e) => {\r\n                    e.preventDefault();\r\n                    var target = e.target;\r\n                    modal.setBody(previewModalBody(contextID, target.value));\r\n                })\r\n            }) */\r\n        });\r\n    };\r\n\r\n    return {\r\n\r\n        processResults: function(selector, modules) {\r\n            return modules;\r\n        },\r\n\r\n        transport: function(selector, query, success, failure) {\r\n\r\n            var mod = document.querySelector(\"#id_pulsenotification_dynamiccontent\");\r\n\r\n            var promise = Ajax.call([{\r\n                methodname: 'pulseaction_notification_get_chapters',\r\n                args: {mod: mod.value}\r\n            }]);\r\n\r\n            promise[0].then(function(result) {\r\n                success(result);\r\n                return;\r\n            }).fail(failure);\r\n        },\r\n\r\n        updateChapter: function() {\r\n\r\n            const SELECTORS = {\r\n                chaperType : \"#id_pulsenotification_contenttype\",\r\n                mod: \"#id_pulsenotification_dynamiccontent\"\r\n            };\r\n\r\n            document.querySelector(SELECTORS.chaperType).addEventListener(\"change\", (e) => resetChapter());\r\n            document.querySelector(SELECTORS.mod).addEventListener(\"change\", (e) => resetChapter());\r\n            var chapter = document.querySelector(\"#id_pulsenotification_chapterid\");\r\n\r\n            function resetChapter() {\r\n                chapter.innerHTML = '';\r\n                chapter.value = '';\r\n                var event = new Event('change');\r\n                chapter.dispatchEvent(event);\r\n            }\r\n        },\r\n\r\n        previewNotification: function(contextid) {\r\n            var btn = document.querySelector('[name=\"pulsenotification_preview\"]');\r\n\r\n            if (btn === null) {\r\n                return;\r\n            }\r\n\r\n            btn.addEventListener('click', function() {\r\n                previewModal(contextid);\r\n            })\r\n        },\r\n\r\n        reportModal: function(contextID) {\r\n            // View content.\r\n            var btn = document.querySelectorAll('[data-target=\"view-content\"]');\r\n\r\n            if (btn === null) {\r\n                return;\r\n            }\r\n\r\n            btn.forEach((element) => {\r\n                element.addEventListener('click', function(e) {\r\n\r\n                    var target = e.target.closest('a');\r\n\r\n                    var instance = target.dataset.instanceid;\r\n                    var userid = target.dataset.userid;\r\n\r\n                    notificationModal(contextID, instance, userid); // Notification modal.\r\n                });\r\n            });\r\n        }\r\n    };\r\n\r\n});\r\n"],"names":["define","$","Ajax","Notification","ModalFactory","Fragment","Str","ModalEvents","previewModalBody","contextID","userid","undefined","window","tinyMCE","params","contentheader","get","getContent","contentstatic","contentfooter","document","querySelector","innerHTML","dynamicparams","contentdynamic","value","contenttype","chapterid","contentlength","loadFragment","processResults","selector","modules","transport","query","success","failure","mod","call","methodname","args","then","result","fail","updateChapter","SELECTORS","addEventListener","e","resetChapter","chapter","event","Event","dispatchEvent","previewNotification","contextid","btn","create","title","get_string","body","large","modal","show","getRoot","on","bodyRendered","preventDefault","target","setBody","reportModal","querySelectorAll","forEach","element","closest","instance","dataset","instanceid","notificationModal"],"mappings":";;;;;;;;;AAyBAA,gDAAO,CAAC,SAAU,YAAa,oBAAqB,qBAAsB,gBAAiB,WAAY,sBACnG,SAASC,EAAGC,KAAMC,aAAcC,aAAcC,SAAUC,IAAKC,mBAGvDC,iBAAmB,SAASC,eAAWC,8DAAO,aAEzBC,IAAnBC,OAAOC,YAEHC,OAAS,CACTC,cAAeH,OAAOC,QAAQG,IAAI,6CAA6CC,aAC/EC,cAAeN,OAAOC,QAAQG,IAAI,6CAA6CC,aAC/EE,cAAeP,OAAOC,QAAQG,IAAI,6CAA6CC,aAC/EP,OAAQA,aAIRI,OAAS,CACTC,cAAeK,SAASC,cAAc,sDAAsDC,UAC5FJ,cAAeE,SAASC,cAAc,sDAAsDC,UAC5FH,cAAeC,SAASC,cAAc,sDAAsDC,UAC5FZ,OAAQA,YAIZa,cAAgB,UACsD,OAAtEH,SAASC,cAAc,6CACvBE,cAAgB,CACZC,eAAgBJ,SAASC,cAAc,2CAA2CI,MAClFC,YAAaN,SAASC,cAAc,wCAAwCI,MAC5EE,UAAWP,SAASC,cAAc,sCAAsCI,MACxEG,cAAeR,SAASC,cAAc,0CAA0CI,QAIjFpB,SAASwB,aAAa,2BAA4B,kBAAmBpB,UAAW,IAAIK,UAAWS,uBA8CnG,CAEHO,eAAgB,SAASC,SAAUC,gBACxBA,SAGXC,UAAW,SAASF,SAAUG,MAAOC,QAASC,aAEtCC,IAAMjB,SAASC,cAAc,wCAEnBnB,KAAKoC,KAAK,CAAC,CACrBC,WAAY,wCACZC,KAAM,CAACH,IAAKA,IAAIZ,UAGZ,GAAGgB,MAAK,SAASC,QACrBP,QAAQO,WAETC,KAAKP,UAGZQ,cAAe,iBAELC,qBACW,oCADXA,cAEG,uCAGTzB,SAASC,cAAcwB,sBAAsBC,iBAAiB,UAAWC,GAAMC,iBAC/E5B,SAASC,cAAcwB,eAAeC,iBAAiB,UAAWC,GAAMC,qBACpEC,QAAU7B,SAASC,cAAc,4CAE5B2B,eACLC,QAAQ3B,UAAY,GACpB2B,QAAQxB,MAAQ,OACZyB,MAAQ,IAAIC,MAAM,UACtBF,QAAQG,cAAcF,SAI9BG,oBAAqB,SAASC,eACtBC,IAAMnC,SAASC,cAAc,sCAErB,OAARkC,KAIJA,IAAIT,iBAAiB,SAAS,WA1FjB,IAASrC,UAAAA,UA2FL6C,UAzFrBlD,aAAaoD,OAAO,CAChBC,MAAOnD,IAAIoD,WAAW,UAAW,4BACjCC,KAAMnD,iBAAiBC,WACvBmD,OAAO,IACRnB,MAAMoB,QACLA,MAAMC,OAEND,MAAME,UAAUC,GAAGzD,YAAY0D,cAAc,WACzCJ,MAAME,UAAU/C,IAAI,GAAGK,cAAc,uBAAuByB,iBAAiB,UAAWC,IACpFA,EAAEmB,qBACEC,OAASpB,EAAEoB,OACfN,MAAMO,QAAQ5D,iBAAiBC,UAAW0D,OAAO1C,qBAkF7D4C,YAAa,SAAS5D,eAEd8C,IAAMnC,SAASkD,iBAAiB,gCAExB,OAARf,KAIJA,IAAIgB,SAASC,UACTA,QAAQ1B,iBAAiB,SAAS,SAASC,OAEnCoB,OAASpB,EAAEoB,OAAOM,QAAQ,KAE1BC,SAAWP,OAAOQ,QAAQC,WAC1BlE,OAASyD,OAAOQ,QAAQjE,QA1FlB,SAASD,UAAWiE,SAAUhE,YAEhDI,OAAS,CACT8D,WAAYF,SACZhE,OAAQA,QAGZN,aAAaoD,OAAO,CAChBC,MAAOnD,IAAIoD,WAAW,UAAW,4BACjCC,KAAMtD,SAASwB,aAAa,2BAA4B,2BAA4BpB,UAAWK,QAC/F8C,OAAO,IACRnB,MAAMoB,QACLA,MAAMC,UAgFEe,CAAkBpE,UAAWiE,SAAUhE"}