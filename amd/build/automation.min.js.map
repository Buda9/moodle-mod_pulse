{"version":3,"file":"automation.min.js","sources":["../src/automation.js"],"sourcesContent":["define(\"mod_pulse/automation\", ['jquery', 'core/modal_factory', 'core/templates', 'core/str', \"core/notification\"],\n    function($, Modal, Template, Str, notification) {\n\n    const moveOutMoreMenu = (navMenu) => {\n\n        if (navMenu === null) {\n            return;\n        }\n\n        var menu = navMenu.querySelector('a.automation-templates');\n\n        if (menu === null) {\n            return;\n        }\n\n        menu = menu.parentNode;\n        menu.dataset.forceintomoremenu = false;\n        menu.querySelector('a').classList.remove('dropdown-item');\n        menu.querySelector('a').classList.add('nav-link');\n        menu.parentNode.removeChild(menu);\n\n        // Insert the stored menus before the more menu.\n        navMenu.insertBefore(menu, navMenu.children[1]);\n        window.dispatchEvent(new Event('resize')); // Dispatch the resize event to create more menu.\n    };\n\n    const returnToFailedTab = () => {\n\n        if (document.forms['pulse-automation-template'] === null) {\n            return false;\n        }\n\n        document.forms['pulse-automation-template'].onsubmit = (e) => {\n            var form = e.target;\n            var invalidElement = form.querySelector('.is-invalid');\n            if (invalidElement === null) {\n                return true;\n            }\n\n            var tabid = invalidElement.parentNode.parentNode.parentNode.id;\n            var hrefSelector = '[href=\"#' + tabid + '\"]';\n\n            document.querySelector(hrefSelector).click();\n\n            return true;\n        };\n\n        return true;\n    };\n\n    // No need.\n    const updateAutoCompletionPositions = function() {\n        var group = \"checkboxgroupautomation\";\n\n        if (document.querySelectorAll('input[type=checkbox].' + group)\n            === null || document.querySelectorAll('[data-fieldtype=\"autocomplete\"], [data-fieldtype=\"tags\"]') === null) {\n            return true;\n        }\n\n\n        var capinput = document.querySelector('input[name=\"hasinstanceeditcapability\"]');\n        var hasCapability = (capinput && capinput.value) || capinput === null;\n\n        // Observer the autocomplete.\n        document.querySelectorAll('[data-fieldtype=\"autocomplete\"], [data-fieldtype=\"tags\"]').forEach((element) => {\n\n            if (element === null) {\n                return true;\n            }\n\n            var observer = new MutationObserver(function(mutations) {\n                mutations.forEach((mutation) => {\n                    var target = mutation.target;\n\n                    // Not has capability to edit instance, then hide the autocomplete input text.\n                    if (!hasCapability && target.querySelector('input[data-fieldtype=\"autocomplete\"]')) {\n                        target.querySelector('input[data-fieldtype=\"autocomplete\"]').disabled = true;\n                    }\n\n                    var overrideElement = target.querySelector('.custom-switch');\n                    if (overrideElement === null) {\n                        return;\n                    }\n                    overrideElement.parentNode.append(overrideElement);\n                    observer.disconnect();\n                });\n            });\n            observer.observe(element, {attributes: true, childList: true, subtree: true});\n            return true;\n        });\n\n        return true;\n    };\n\n    const moveOverRidePosition = function() {\n\n        var group = \"checkboxgroupautomation\";\n\n        if (document.querySelectorAll('input[type=checkbox].' + group) === null) {\n            return true;\n        }\n\n        document.querySelectorAll('input[type=checkbox].' + group).forEach((overElement) => {\n            var id = overElement.id;\n            id = id.replace('id_override_', '');\n            var element = document.querySelector('div#fitem_id_' + id);\n            if (element === null) {\n                element = document.querySelector('div#fgroup_id_' + id);\n                if (element === null) {\n                    return true;\n                }\n            }\n            var parent = overElement.parentNode;\n            parent.innerHTML += '<span class=\"custom-control-label\"></span>';\n            var nodeToMove = document.createElement('div');\n            nodeToMove.classList.add('custom-control', 'custom-switch');\n            nodeToMove.append(parent);\n            element.querySelector(\".felement\").append(nodeToMove);\n            return true;\n        });\n        // Move the override button for autocompletion fields after the autocomplete nodes are created.\n        updateAutoCompletionPositions();\n\n        return true;\n    };\n\n    /**\n     * Create a modal to display the list of instances which is overriden the template setting.\n     *\n     * @returns {void}\n     */\n    const overrideModal = function() {\n\n        // Add the template reference as prefix of the instance reference.\n        var templateReference = document.querySelector('#pulse-template-reference');\n        var instanceReference = document.querySelector('#fitem_id_insreference .felement');\n        if (templateReference && instanceReference) {\n            templateReference.classList.remove('hide');\n            instanceReference.prepend(templateReference);\n        }\n\n        const trigger = document.querySelectorAll('[data-target=\"overridemodal\"]');\n\n        if (trigger === null) {\n            return;\n        }\n\n        trigger.forEach((elem) => {\n\n            elem.nextSibling.querySelector('.felement').append(elem);\n\n            elem.addEventListener('click', function(e) {\n                e.preventDefault();\n                var element = e.target;\n                var data = element.dataset;\n                var instance = document.querySelector('[name=overinstance_' + data.element + ']');\n                if (instance !== null) {\n                    var overrides = JSON.parse(instance.value);\n                    overrides.map((value) => {\n                        var path = '/mod/pulse/automation/instances/edit.php?instanceid=';\n                        value.url = M.cfg.wwwroot + path + value.id + '&sesskey=' + M.cfg.sesskey;\n                        return value;\n                    });\n                    Modal.create({\n                        title: Str.get_string('instanceoverrides', 'pulse'),\n                        body: Template.render('mod_pulse/overrides', {instances: overrides})\n                    }).then((modal) => {\n                        modal.show();\n                        return true;\n                    }).catch(notification.exception);\n                }\n            });\n        });\n    };\n\n    const enableTitleOnSubmit = function() {\n        if (document.forms['pulse-automation-template'] === null) {\n            return;\n        }\n        document.forms['pulse-automation-template'].onsubmit =\n            () => document.querySelector('[name=\"title\"]').removeAttribute(\"disabled\");\n    };\n\n    return {\n\n        init: function() {\n            returnToFailedTab();\n            overrideModal();\n            moveOverRidePosition();\n            enableTitleOnSubmit();\n        },\n\n        instanceMenuLink: function() {\n            var primaryNav = document.querySelector('.secondary-navigation ul.more-nav');\n            moveOutMoreMenu(primaryNav);\n        },\n\n    };\n});\n"],"names":["define","$","Modal","Template","Str","notification","moveOverRidePosition","group","document","querySelectorAll","forEach","overElement","id","replace","element","querySelector","parent","parentNode","innerHTML","nodeToMove","createElement","classList","add","append","capinput","hasCapability","value","observer","MutationObserver","mutations","mutation","target","disabled","overrideElement","disconnect","observe","attributes","childList","subtree","updateAutoCompletionPositions","init","forms","onsubmit","e","invalidElement","hrefSelector","click","templateReference","instanceReference","remove","prepend","trigger","elem","nextSibling","addEventListener","preventDefault","data","dataset","instance","overrides","JSON","parse","map","url","M","cfg","wwwroot","sesskey","create","title","get_string","body","render","instances","then","modal","show","catch","exception","overrideModal","removeAttribute","instanceMenuLink","navMenu","menu","forceintomoremenu","removeChild","insertBefore","children","window","dispatchEvent","Event","moveOutMoreMenu"],"mappings":"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"}