{"version":3,"file":"bulkaction.min.js","sources":["../src/bulkaction.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Contain the bulk action for the instance management.\r\n *\r\n * @module  mod_pulse/bulkaction\r\n * @copyright 2023, bdecent gmbh bdecent.de\r\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\ndefine(\"mod_pulse/bulkaction\", [\"jquery\", \"core/fragment\", \"core/modal_factory\", \"core/modal_events\", \"core/notification\", \"core/str\", \"core/ajax\", \"core/templates\"],\r\n(function($, Fragment, ModalFactory, ModalEvents, notification, String, Ajax, Templates) {\r\n\r\n    /**\r\n     * Instance management page selectors.\r\n     */\r\n    const Selectors = {\r\n        table: '#manage-instance-table',\r\n        selectAll: '#manage-instance-tab .selectall-pulse-bulkaction',\r\n        deselectAll: '#manage-instance-tab .deselectall-pulse-bulkaction',\r\n        selectwithoutinsbtn: '#manage-instance-tab #selectwithoutins-btn',\r\n        CheckBoxes: \"input[name='bc[]']\",\r\n        DeleteBtn: '#manage-instance-tab  #bulkdelete-btn',\r\n        AddBtn: '#manage-instance-tab  #bulkadd-btn',\r\n        EnableBtn: '#manage-instance-tab  #bulkenable-btn',\r\n        DisableBtn: '#manage-instance-tab  #bulkdisable-btn',\r\n        CheckedBoxes: \"input[name='bc[]']:checked\",\r\n        checkboxgroups: '#manage-instance-tab .bulkaction-group',\r\n        tabUL: '#automation-tabs',\r\n        tabPane: '#pulsetemplates-tab-content .tab-pane',\r\n        tabContent: '#pulsetemplates-tab-content',\r\n        manageInstanceTab: '#manage-instance-tab',\r\n        templateForm: '.mform#pulse-automation-template',\r\n        activeNav: '#automation-tabs .nav-link.active',\r\n    };\r\n\r\n    /**\r\n     * Init the bulk select actions in the instance management tab.\r\n     */\r\n    function BulkSelect() {\r\n        const select = document.querySelector(Selectors.selectAll);\r\n        const deselect = document.querySelector(Selectors.deselectAll);\r\n        const tableRoot = () => document.querySelector(Selectors.table);\r\n        const checkboxelm = () => tableRoot().querySelectorAll(Selectors.CheckBoxes);\r\n        const selectwithoutins = document.querySelector(Selectors.selectwithoutinsbtn);\r\n        const checkboxgroup = document.querySelector(Selectors.checkboxgroups);\r\n\r\n        // Whent click the select all button on the instance management tab.\r\n        select.addEventListener('click', (e) => {\r\n            checkboxelm().forEach(checkbox => {\r\n                checkbox.checked = true;\r\n                checkboxgroup.classList.remove('hide');\r\n            });\r\n        });\r\n\r\n        // Whent click the de-select all button on the instance management tab.\r\n        deselect.addEventListener('click', (e) => {\r\n            checkboxelm().forEach(checkbox => {\r\n                checkbox.checked = false;\r\n                checkboxgroup.classList.add('hide');\r\n            });\r\n        });\r\n\r\n        // Whent click the select all without instances button on the instance management tab.\r\n        selectwithoutins.addEventListener('click', (e) => {\r\n            checkboxelm().forEach(checkbox => {\r\n                if (checkbox.classList.contains(\"emptyinstance\")) {\r\n                    checkbox.checked = true;\r\n                    checkboxgroup.classList.remove('hide');\r\n                }\r\n            });\r\n        });\r\n\r\n        // Add event listener to checkboxes.\r\n        // checkboxelm().forEach(checkbox => {\r\n        document.addEventListener('change', function(e) {\r\n\r\n            if (e.target.matches(Selectors.CheckBoxes)) {\r\n                // Check if at least one checkbox is checked.\r\n                var atLeastOneChecked = Array.from(checkboxelm()).some(function(checkbox) {\r\n                    return checkbox.checked;\r\n                });\r\n\r\n                // Toggle visibility of bulk edit action based on checkbox status.\r\n                if (atLeastOneChecked) {\r\n                    checkboxgroup.classList.remove('hide');\r\n                } else {\r\n                    checkboxgroup.classList.add('hide');\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Return the selected check boxes coursed ids for the instance management.\r\n     *\r\n     * @returns array $courseids course Ids\r\n     */\r\n    function GetCheckedCourseIDs() {\r\n        var courseids = [];\r\n        var checkedboxes = document.querySelectorAll(Selectors.CheckedBoxes);\r\n        checkedboxes.forEach(checkedbox => {\r\n            courseids.push(checkedbox.value);\r\n        });\r\n        return courseids;\r\n    }\r\n\r\n    /**\r\n     * Manage the automation instances confirmation and bulk action in modal.\r\n     *\r\n     * @param {int} params\r\n     */\r\n    function ManageInstances (params) {\r\n        const deletebtn = document.querySelector(Selectors.DeleteBtn);\r\n        const addbtn = document.querySelector(Selectors.AddBtn);\r\n        const disableBtn = document.querySelector(Selectors.DisableBtn);\r\n        const enableBtn = document.querySelector(Selectors.EnableBtn);\r\n\r\n        // Click the delete instance bulk action button.\r\n        deletebtn.addEventListener('click', function(e) {\r\n            var courseids = GetCheckedCourseIDs();\r\n            GetInstanceModal(courseids, params, 'delete');\r\n        });\r\n\r\n        // Click the add instance bulk action button.\r\n        addbtn.addEventListener('click', function(e) {\r\n            var courseids = GetCheckedCourseIDs();\r\n            GetInstanceModal(courseids, params, 'add');\r\n        });\r\n\r\n        // Click the disable instance bulk action button.\r\n        disableBtn.addEventListener('click', function(e) {\r\n            var courseids = GetCheckedCourseIDs();\r\n            GetInstanceModal(courseids, params, 'disable');\r\n        });\r\n\r\n        // Click the enable instance bulk action button.\r\n        enableBtn.addEventListener('click', function(e) {\r\n            var courseids = GetCheckedCourseIDs();\r\n            GetInstanceModal(courseids, params, 'enable');\r\n        });\r\n\r\n        // Show/hide the instance manage tab of template.\r\n        // Moved the tab outside the form, default tab handlers not works. Used custom method to show hide.\r\n        document.querySelector(Selectors.tabUL).addEventListener('click', function (e) {\r\n            templateInstanceFilter(e);\r\n        });\r\n\r\n        const templateInstanceFilter = (e) => {\r\n\r\n            document.querySelectorAll(Selectors.tabPane).forEach((e) => {\r\n                e.classList.remove('active');\r\n                e.classList.remove('show')\r\n            });\r\n            // Remove the active.\r\n            var href = (e == null || !e.target.matches('#automation-tabs .nav-link')) ? activeTabHref() : e.target.getAttribute('href');\r\n\r\n            document.querySelector(Selectors.tabContent + ' ' + href).classList.add('active');\r\n            document.querySelector(Selectors.tabContent + ' ' + href).classList.add('show');\r\n\r\n            // Hide the form.\r\n            if (href == Selectors.manageInstanceTab) {\r\n                document.querySelector(Selectors.templateForm).style.display = 'none';\r\n            } else {\r\n                document.querySelector(Selectors.templateForm).style.display = 'block';\r\n            }\r\n        };\r\n\r\n        // Find the active ul.\r\n        const activeTabHref = () => {\r\n            return !document.querySelector(Selectors.activeNav)\r\n                || document.querySelector(Selectors.activeNav).getAttribute('href');\r\n        };\r\n\r\n        templateInstanceFilter(null);\r\n    }\r\n\r\n    /**\r\n     * Get the instance management confirmation modal.\r\n     *\r\n     * @param {array} courseids Course Ids\r\n     * @param {int} params Templated ID\r\n     * @param {string} action Bulk action name\r\n     */\r\n    function GetInstanceModal(courseids, params, action) {\r\n        var args = {templateid: params, courseids: courseids, action: action};\r\n        ModalFactory.create({\r\n            type: ModalFactory.types.SAVE_CANCEL,\r\n            title: String.get_string('confirmation', 'pulse'),\r\n            body: String.get_string('confirm'+action+'instance', 'pulse'),\r\n            large: false\r\n        })\r\n        .then(function(modal) {\r\n\r\n            modal.setButtonText('save', String.get_string('yes'));\r\n\r\n            modal.getRoot().on(ModalEvents.save, e => {\r\n                e.preventDefault();\r\n                SubmitFormData(args);\r\n                LoadInstancetable(args);\r\n                modal.getRoot().find('form').submit();\r\n                modal.hide();\r\n            });\r\n\r\n            modal.getRoot().on(ModalEvents.hidden, function() {\r\n                modal.destroy();\r\n            });\r\n            modal.show();\r\n            return modal;\r\n        }).catch(notification.exception);\r\n    }\r\n\r\n    /**\r\n     * Submit and recieve the message form the modal confirmation on the instance management.\r\n     *\r\n     * @param {string} params\r\n     */\r\n    function SubmitFormData(params) {\r\n        Ajax.call([{\r\n            methodname: 'mod_pulse_manage_instances',\r\n            args: params,\r\n            done: function(response) {\r\n                window.location.reload();\r\n                if (response.message) {\r\n                    notification.addNotification({\r\n                        message: response.message,\r\n                        type: \"success\"\r\n                    });\r\n                }\r\n            }\r\n        }]);\r\n    };\r\n\r\n    /**\r\n     * Load the current manage instance table to replace the table root.\r\n     *\r\n     * @param {string} params\r\n     */\r\n    function LoadInstancetable(params) {\r\n        var table = document.querySelector(Selectors.table);\r\n        Fragment.loadFragment('mod_pulse', 'get_manageinstance_table', 1, params).done((html, js) => {\r\n            Templates.replaceNode(table, html, js);\r\n        });\r\n    }\r\n\r\n    return {\r\n        init: function(params) {\r\n            BulkSelect();\r\n            ManageInstances(params);\r\n        },\r\n    };\r\n\r\n}));\r\n\r\n//# sourceMappingURL=bulkaction.min.js.map\r\n"],"names":["define","$","Fragment","ModalFactory","ModalEvents","notification","String","Ajax","Templates","Selectors","BulkSelect","select","document","querySelector","deselect","checkboxelm","querySelectorAll","selectwithoutins","checkboxgroup","addEventListener","e","forEach","checkbox","checked","classList","remove","add","contains","target","matches","Array","from","some","GetCheckedCourseIDs","courseids","checkedbox","push","value","GetInstanceModal","params","action","args","templateid","create","type","types","SAVE_CANCEL","title","get_string","body","large","then","modal","setButtonText","getRoot","on","save","preventDefault","call","methodname","done","response","window","location","reload","message","addNotification","SubmitFormData","table","loadFragment","html","js","replaceNode","LoadInstancetable","find","submit","hide","hidden","destroy","show","catch","exception","init","deletebtn","addbtn","disableBtn","enableBtn","templateInstanceFilter","href","getAttribute","activeTabHref","style","display","ManageInstances"],"mappings":"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"}