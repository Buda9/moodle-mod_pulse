{"version":3,"file":"module.min.js","sources":["../src/module.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Module javascript to place the placeholders.\r\n * Modified version of IOMAD Email template emailvars.\r\n *\r\n * @module   mod_pulse/module\r\n * @category  Classes - autoloading\r\n * @copyright 2021, bdecent gmbh bdecent.de\r\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\ndefine(['core_editor/events'], function(events) {\r\n\r\n    var tinyEditor = false;\r\n\r\n    return {\r\n        /**\r\n         * Setup the classes to editors works with placeholders.\r\n         */\r\n        init: function() {\r\n            var module = this;\r\n\r\n            var templatevars = document.getElementsByClassName(\"fitem_id_templatevars_editor\");\r\n            for (var l = 0; l < templatevars.length; l++) {\r\n                templatevars[l].addEventListener('click', function() {\r\n                    var EditorInput = document.getElementById('id_pulse_content_editoreditable');\r\n                    module.insertCaretActive(EditorInput);\r\n                });\r\n            }\r\n\r\n            var notificationheader = document.getElementById('admin-notificationheader');\r\n            if (notificationheader !== null) {\r\n                notificationheader.addEventListener('click', function() {\r\n                    var EditorInput = document.getElementById('id_s_mod_pulse_notificationheadereditable');\r\n                    module.insertCaretActive(EditorInput);\r\n                });\r\n            }\r\n\r\n            var notificationfooter = document.getElementById('admin-notificationfooter');\r\n            if (notificationfooter !== null) {\r\n                notificationfooter.addEventListener('click', function() {\r\n                    var EditorInput = document.getElementById('id_s_mod_pulse_notificationfootereditable');\r\n                    module.insertCaretActive(EditorInput);\r\n                });\r\n            }\r\n\r\n            var templatevars = document.getElementsByClassName(\"fitem_id_templatevars_editor\");\r\n            if (templatevars) {\r\n                templatevars.forEach((elem) => {\r\n                    elem.addEventListener('click', function(e) {\r\n                        var target = e.currentTarget;\r\n                        var EditorInput  = target.querySelector('[id*=\"_editoreditable\"]');\r\n                        module.insertCaretActive(EditorInput);\r\n                    });\r\n                })\r\n            }\r\n\r\n            // console.log(window.tinyMCE.get());\r\n            var targetNode = document.querySelector('textarea[id$=_editor]');\r\n            if (targetNode !== null) {\r\n                var observer = new MutationObserver(function() {\r\n                    if (targetNode.style.display == 'none') {\r\n                        setTimeout(initIframeListeners, 100);\r\n                    }\r\n                });\r\n                observer.observe(targetNode, { attributes: true, childList: true });\r\n            }\r\n\r\n            const initIframeListeners = () => {\r\n\r\n                var iframes = document.querySelectorAll('[data-fieldtype=\"editor\"] iframe');\r\n                if (iframes === null || !iframes.length) {\r\n                    return false;\r\n                }\r\n\r\n                iframes.forEach((iframe) => {\r\n                    iframe.contentDocument.addEventListener('click', function(e) {\r\n\r\n                        var currentFrame = e.target;\r\n                        iframes.forEach((frame) => {\r\n                            var frameElem = frame.contentDocument.querySelector(\".insertatcaretactive\");\r\n                            if (frameElem != null) {\r\n                                frameElem.classList.remove(\"insertatcaretactive\");\r\n                            }\r\n                        });\r\n\r\n                        var contentBody = currentFrame.querySelector('body');\r\n                        if (contentBody !== null) {\r\n                            contentBody.classList.add(\"insertatcaretactive\");\r\n                            var id = contentBody.dataset.id;\r\n                            var editor = window.tinyMCE.get(id);\r\n                            tinyEditor = editor;\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n\r\n\r\n            var clickforword = document.getElementsByClassName('clickforword');\r\n            for (var i = 0; i < clickforword.length; i++) {\r\n                clickforword[i].addEventListener('click', function(e) {\r\n                    e.preventDefault(); // To prevent the default behaviour of a tag.\r\n\r\n                    var content = \"{\" + this.getAttribute('data-text') + \"}\";\r\n                    if (tinyEditor) {\r\n                        tinyEditor.selection.setContent(content);\r\n                    } else {\r\n                        module.insertAtCaret(content);\r\n                    }\r\n                });\r\n            }\r\n\r\n            // Make selected roles as badges in module edit form page.\r\n            if (document.getElementById('page-mod-pulse-mod') !== null && document.getElementById('page-mod-pulse-mod')\r\n                .querySelector(\"#fgroup_id_completionrequireapproval [data-fieldtype='autocomplete']\") !== null) {\r\n                const textNodes = this.getAllTextNodes(\r\n                    document.getElementById('page-mod-pulse-mod')\r\n                    .querySelector(\"#fgroup_id_completionrequireapproval [data-fieldtype='autocomplete']\")\r\n                );\r\n                textNodes.forEach(node => {\r\n                    const span = document.createElement('span');\r\n                    span.classList = 'badge badge-info pulse-completion-roles';\r\n                    node.after(span);\r\n                    span.appendChild(node);\r\n                });\r\n            }\r\n        },\r\n\r\n        insertCaretActive: function(EditorInput) {\r\n            if (EditorInput === null) {\r\n                return;\r\n            }\r\n            tinyEditor = false;\r\n            var caret = document.getElementsByClassName(\"insertatcaretactive\");\r\n            for (var j = 0; j < caret.length; j++) {\r\n                caret[j].classList.remove(\"insertatcaretactive\");\r\n            }\r\n            EditorInput.classList.add(\"insertatcaretactive\");\r\n        },\r\n\r\n        /**\r\n         * Filter text from node.\r\n         * @param  {string} element\r\n         * @returns {array} list of childNodes.\r\n         */\r\n        getAllTextNodes: function(element) {\r\n            return Array.from(element.childNodes)\r\n            .filter(node => node.nodeType === 3 && node.textContent.trim().length > 1);\r\n        },\r\n\r\n        /**\r\n         * Insert the placeholder in selected caret place.\r\n         * @param  {string} myValue\r\n         */\r\n        insertAtCaret: function(myValue) {\r\n            var caretelements = document.getElementsByClassName(\"insertatcaretactive\");\r\n            var sel, range;\r\n            for (var n = 0; n < caretelements.length; n++) {\r\n                var thiselem = caretelements[n];\r\n\r\n                if (typeof thiselem.value === 'undefined' && window.getSelection) {\r\n                    sel = window.getSelection();\r\n                    if (sel.getRangeAt && sel.rangeCount) {\r\n                        range = sel.getRangeAt(0);\r\n                        range.deleteContents();\r\n                        range.insertNode(document.createTextNode(myValue));\r\n\r\n                        for (let position = 0; position != (myValue.length + 1); position++) {\r\n                            sel.modify(\"move\", \"right\", \"character\");\r\n                        }\r\n                    }\r\n                } else if (typeof thiselem.value === 'undefined' && document.selection && document.selection.createRange) {\r\n                    range = document.selection.createRange();\r\n                    range.text = myValue;\r\n                }\r\n\r\n                if (typeof thiselem.value !== 'undefined') {\r\n                    if (document.selection) {\r\n                        // For browsers like Internet Explorer.\r\n                        thiselem.focus();\r\n                        sel = document.selection.createRange();\r\n                        sel.text = myValue;\r\n                        thiselem.focus();\r\n                    } else if (thiselem.selectionStart || thiselem.selectionStart == '0') {\r\n                        // For browsers like Firefox and Webkit based.\r\n                        var startPos = thiselem.selectionStart;\r\n                        var endPos = thiselem.selectionEnd;\r\n                        thiselem.value = thiselem.value.substring(0, startPos)\r\n                            + myValue + thiselem.value.substring(endPos, thiselem.value.length);\r\n                        thiselem.focus();\r\n                        thiselem.selectionStart = startPos + myValue.length;\r\n                        thiselem.selectionEnd = startPos + myValue.length;\r\n                        thiselem.focus();\r\n                    } else {\r\n                        thiselem.value += myValue;\r\n                        thiselem.focus();\r\n                    }\r\n                }\r\n            }\r\n        },\r\n    };\r\n});\r\n"],"names":["define","events","tinyEditor","init","module","this","templatevars","document","getElementsByClassName","l","length","addEventListener","EditorInput","getElementById","insertCaretActive","notificationheader","notificationfooter","forEach","elem","e","currentTarget","querySelector","targetNode","MutationObserver","style","display","setTimeout","initIframeListeners","observe","attributes","childList","iframes","querySelectorAll","iframe","contentDocument","currentFrame","target","frame","frameElem","classList","remove","contentBody","add","id","dataset","editor","window","tinyMCE","get","clickforword","i","preventDefault","content","getAttribute","selection","setContent","insertAtCaret","getAllTextNodes","node","span","createElement","after","appendChild","caret","j","element","Array","from","childNodes","filter","nodeType","textContent","trim","myValue","sel","range","caretelements","n","thiselem","value","getSelection","getRangeAt","rangeCount","deleteContents","insertNode","createTextNode","position","modify","createRange","text","focus","selectionStart","startPos","endPos","selectionEnd","substring"],"mappings":"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"}