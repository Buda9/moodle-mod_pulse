{"version":3,"file":"preset.min.js","sources":["../src/preset.js"],"sourcesContent":["define(['jquery', 'core/modal_factory', 'mod_pulse/modal_preset', 'mod_pulse/events', 'core/str',\r\n'core/fragment', 'core/ajax', 'core/templates', 'mod_pulse/loadingicon', 'core/notification', 'core/modal_events'],\r\n    function($, Modal, ModalPreset, PresetEvents, Str, Fragment, AJAX, Templates, Loadingicon, Notification, ModalEvents) {\r\n\r\n    var SELECTOR = {\r\n        presetAvailability: '.preset-config-params .availability-field'\r\n    };\r\n\r\n    /**\r\n     * Preset module declaration. Setup the global values.\r\n     * @param  {int} contextId\r\n     * @param  {int} courseid\r\n     * @param  {int} section\r\n     */\r\n    var Preset = function(contextId, courseid, section) {\r\n        this.contextId = contextId;\r\n        this.courseid = courseid;\r\n        this.section = section;\r\n        this.loadPresetsList();\r\n    };\r\n\r\n    Preset.prototype.listElement = {'selector': 'pulse-presets-data', \"loaded\": \"data-listloaded\"};\r\n\r\n    Preset.prototype.contextId = 0;\r\n\r\n    Preset.prototype.courseid = 0;\r\n\r\n    Preset.prototype.section = 0;\r\n\r\n    Preset.prototype.pageparams = [];\r\n\r\n    Preset.prototype.loadIconElement = '.modal-footer #loader-icon';\r\n\r\n    Preset.prototype.actionbuttons = '.modal-footer button';\r\n\r\n    /**\r\n     * Setup the presets modal event listeners.\r\n     */\r\n    Preset.prototype.setupmodal = function() {\r\n\r\n        var THIS = this;\r\n\r\n        var triggerelement = document.querySelectorAll('.pulse-usepreset');\r\n        // Modal attachment point.\r\n        var attachmentPoint = document.createElement('div');\r\n        attachmentPoint.classList.add('modal-preset');\r\n        triggerelement.forEach((element) => element.addEventListener('click', () => {\r\n            var presetid = element.getAttribute('data-presetid');\r\n            var presettitle = element.getAttribute('data-presettitle');\r\n            var params = {'presetid': presetid, 'courseid': THIS.courseid, 'section': THIS.section};\r\n\r\n            document.body.prepend(attachmentPoint);\r\n            Modal.create({\r\n                type: ModalPreset.TYPE,\r\n                title: Str.get_string('presetmodaltitle', 'pulse', {'title': presettitle}),\r\n                body: Fragment.loadFragment('mod_pulse', 'get_preset_preview', THIS.contextId, params),\r\n                large: true,\r\n            }).then(modal => {\r\n                // Make the modal attachment point to overcome the restriction access condition.\r\n                modal.attachmentPoint = attachmentPoint;\r\n                modal.show();\r\n                modal.getRoot().on(ModalEvents.bodyRendered, function() {\r\n                    THIS.reinitAvailability(SELECTOR.presetAvailability);\r\n                    THIS.fieldChangedEvent();\r\n                });\r\n                // Destroy the modal on hidden to reload the editors.\r\n                modal.getRoot().on(ModalEvents.hidden, function() {\r\n                    modal.destroy.bind(modal);\r\n                    THIS.reinitAvailability();\r\n                });\r\n\r\n                // Apply and customize method.\r\n                modal.getRoot().on(PresetEvents.customize, () => {\r\n                    var modform = document.querySelector('#mod-pulse-form');\r\n                    var modformdata = new FormData(modform);\r\n                    modal.getRoot().get(0).querySelectorAll('form').forEach(form => {\r\n                        var formdata = new FormData(form);\r\n                        formdata = new URLSearchParams(formdata).toString();\r\n                        var pageparams = new URLSearchParams(modformdata).toString();\r\n                        params = {formdata: formdata, pageparams: pageparams};\r\n\r\n                        Loadingicon.addIconToContainer(this.loadIconElement);\r\n                        THIS.disableButtons();\r\n                        THIS.applyCustomize(params, THIS.contextId, modal);\r\n                    });\r\n                });\r\n                // Apply and save method.\r\n                modal.getRoot().on(PresetEvents.save, (e) => {\r\n                    e.preventDefault();\r\n                    Loadingicon.addIconToContainer(this.loadIconElement);\r\n                    THIS.disableButtons();\r\n                    var formdata = {};\r\n                    modal.getRoot().get(0).querySelectorAll('form').forEach(form => {\r\n                        formdata = new FormData(form);\r\n                        this.restorePreset(formdata, THIS.contextId);\r\n                    });\r\n                });\r\n                return true;\r\n            }).catch(Notification.exception);\r\n        }));\r\n    };\r\n\r\n\r\n    Preset.prototype.fieldChangedEvent = () => {\r\n        var confParam = document.getElementById(\"preset-configurable-params\");\r\n        var reminders = ['first', 'second', 'recurring'];\r\n        var methods = ['fixed', 'relative'];\r\n        var fieldName, changeinput, id, changeName, split;\r\n        confParam.querySelectorAll('input, select, textarea').forEach(field => {\r\n            field.addEventListener('change', (event) => {\r\n                fieldName = event.target.getAttribute('name');\r\n                if (confParam.querySelector('input[name=\"' + fieldName + '_changed\"]') !== null) {\r\n                    confParam.querySelector('input[name=\"' + fieldName + '_changed\"]').value = true;\r\n                }\r\n            });\r\n        });\r\n\r\n        reminders.forEach(reminder => {\r\n            confParam.querySelectorAll('[name=\"' + reminder + '_schedule\"').forEach(schedule => {\r\n                schedule.addEventListener('change', (e) => {\r\n                    changeName = e.target.getAttribute('name');\r\n                    changeinput = 'input[name=\"' + changeName + '_arr_changed\"]';\r\n                    confParam.querySelector(changeinput).value = true;\r\n                });\r\n            });\r\n            methods.forEach(method => {\r\n                id = reminder + \"_\" + method + \"date\";\r\n                confParam.querySelectorAll('[name*=\"' + id + '\"]').forEach(opt => {\r\n                    opt.addEventListener('change', (e) => {\r\n                        split = e.target.getAttribute('name').split('[');\r\n                        changeName = (split.hasOwnProperty(1)) ? split[0] : split;\r\n                        changeinput = 'input[name=\"' + changeName + '_changed\"]';\r\n                        confParam.querySelector(changeinput).value = true;\r\n                    });\r\n                });\r\n            });\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Reinitialize the availability javascript.\r\n     * @param {string} selector\r\n     */\r\n    Preset.prototype.reinitAvailability = function(selector = '.availability-field') {\r\n        if (typeof M.core_availability.form !== \"undefined\") {\r\n            this.resetRestrictPlugins();\r\n            document.querySelectorAll(selector).forEach((field) => field.parentNode.removeChild(field));\r\n            M.core_availability.form.init();\r\n        }\r\n    };\r\n\r\n    Preset.prototype.resetRestrictPlugins = function() {\r\n        if (typeof M.core_availability.form !== \"undefined\" && document.getElementById('id_availabilityconditionsjson') !== null) {\r\n            M.core_availability.form.restrictByGroup = null;\r\n            var availabilityPlugins = (typeof M.core_availability.form.plugins !== 'undefined')\r\n                ? M.core_availability.form.plugins : {};\r\n            var plugin = '';\r\n            for (var i in availabilityPlugins) {\r\n                plugin = \"availability_\" + i;\r\n                if (M.hasOwnProperty(plugin)) {\r\n                    M[plugin].form.addedEvents = false;\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Apply and customize triggered using fragment. Response will replaced with current mod form.\r\n     * @param  {string} params\r\n     * @param  {int} contextID\r\n     * @param  {object} modal\r\n     */\r\n    Preset.prototype.applyCustomize = function(params, contextID, modal) {\r\n        Fragment.loadFragment('mod_pulse', 'apply_preset', contextID, params).done((html, js) => {\r\n            modal.destroy();\r\n            // Reset the availability to work for upcoming response html.\r\n            this.resetRestrictPlugins();\r\n            this.handleFormSubmissionResponse(html, js);\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Disable the modal save and customize buttons to prevent reinit.\r\n     */\r\n    Preset.prototype.disableButtons = function() {\r\n        var buttons = document.querySelectorAll(this.actionbuttons);\r\n        for (let $i in buttons) {\r\n            buttons[$i].disabled = true;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Handle the loaded fragment output of customize method pulse mod.\r\n     * @param  {html} data\r\n     * @param  {string} js\r\n     */\r\n    Preset.prototype.handleFormSubmissionResponse = (data, js) => {\r\n        var newform = document.createElement('div');\r\n        newform.innerHTML = data;\r\n        Templates.replaceNode('[action=\"modedit.php\"]', data, js);\r\n\r\n    };\r\n\r\n    /**\r\n     * Initiate the apply and save method to create the pulse module with custom daa.\r\n     * @param  {FormData} formdata\r\n     * @param  {int} contextid\r\n     */\r\n    Preset.prototype.restorePreset = (formdata, contextid) => {\r\n        var formdatastr = new URLSearchParams(formdata).toString();\r\n        var promises = AJAX.call([{\r\n            methodname: 'mod_pulse_apply_presets',\r\n            args: {contextid: contextid, formdata: formdatastr}\r\n        }]);\r\n\r\n        promises[0].done((response) => {\r\n            response = JSON.parse(response);\r\n            if (typeof response.url != 'undefined') {\r\n                window.location.href = response.url;\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Load list of available presets.\r\n     */\r\n    Preset.prototype.loadPresetsList = function() {\r\n        var listParent = document.getElementById(this.listElement.selector);\r\n\r\n        if (listParent !== null) {\r\n            if (listParent.getAttribute(this.listElement.loaded) == 'false') {\r\n                Fragment.loadFragment('mod_pulse', 'get_presetslist', this.contextId, {'courseid': this.courseid})\r\n                .done((html, js) => {\r\n                    Templates.replaceNodeContents(listParent, html, js);\r\n                    listParent.setAttribute(this.listElement.loaded, 'true');\r\n                    this.setupmodal();\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    return {\r\n        init: (contextId, courseid, section) => {\r\n            new Preset(contextId, courseid, section);\r\n        }\r\n    };\r\n});\r\n"],"names":["define","$","Modal","ModalPreset","PresetEvents","Str","Fragment","AJAX","Templates","Loadingicon","Notification","ModalEvents","SELECTOR","Preset","contextId","courseid","section","loadPresetsList","prototype","listElement","pageparams","loadIconElement","actionbuttons","setupmodal","THIS","this","triggerelement","document","querySelectorAll","attachmentPoint","createElement","classList","add","forEach","element","addEventListener","presetid","getAttribute","presettitle","params","body","prepend","create","type","TYPE","title","get_string","loadFragment","large","then","modal","show","getRoot","on","bodyRendered","reinitAvailability","fieldChangedEvent","hidden","destroy","bind","customize","modform","querySelector","modformdata","FormData","get","form","formdata","URLSearchParams","toString","addIconToContainer","_this","disableButtons","applyCustomize","save","e","preventDefault","restorePreset","catch","exception","fieldName","changeinput","id","changeName","split","confParam","getElementById","methods","field","event","target","value","reminder","schedule","method","opt","hasOwnProperty","selector","M","core_availability","resetRestrictPlugins","parentNode","removeChild","init","restrictByGroup","availabilityPlugins","plugins","plugin","i","addedEvents","contextID","done","html","js","_this2","handleFormSubmissionResponse","buttons","$i","disabled","data","innerHTML","replaceNode","contextid","formdatastr","call","methodname","args","response","JSON","parse","url","window","location","href","listParent","loaded","replaceNodeContents","setAttribute","_this3"],"mappings":"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"}