{"version":3,"file":"preset.min.js","sources":["../src/preset.js"],"sourcesContent":["define(['jquery', 'core/modal_factory', 'mod_pulse/modal_preset', 'mod_pulse/events', 'core/str', 'core/fragment', 'core/ajax',\r\n    'core/templates', 'core/loadingicon', 'core/notification', 'core/modal_events', 'mod_pulse/presetmodal'],\r\n    function($, Modal, ModalPreset, PresetEvents, Str, Fragment, AJAX, Templates, Loadingicon,\r\n        Notification, ModalEvents, PresetModal) {\r\n\r\n        var SELECTOR = {\r\n            presetAvailability: '.preset-config-params .availability-field'\r\n        };\r\n\r\n        /**\r\n         * Preset module declaration. Setup the global values.\r\n         * @param  {int} contextId\r\n         * @param  {int} courseid\r\n         * @param  {int} section\r\n         */\r\n        var Preset = function(contextId, courseid, section) {\r\n            this.contextId = contextId;\r\n            this.courseid = courseid;\r\n            this.section = section;\r\n            this.loadPresetsList();\r\n        };\r\n\r\n        Preset.prototype.listElement = {'selector': 'pulse-presets-data', \"loaded\": \"data-listloaded\"};\r\n\r\n        Preset.prototype.contextId = 0;\r\n\r\n        Preset.prototype.courseid = 0;\r\n\r\n        Preset.prototype.section = 0;\r\n\r\n        Preset.prototype.pageparams = [];\r\n\r\n        Preset.prototype.loadIconElement = '.modal-footer #loader-icon';\r\n\r\n        Preset.prototype.actionbuttons = '.modal-footer button';\r\n\r\n        /**\r\n         * Setup the presets modal event listeners.\r\n         */\r\n        Preset.prototype.setupmodal = function() {\r\n\r\n            var THIS = this;\r\n\r\n            var triggerelement = document.querySelectorAll('.pulse-usepreset');\r\n            // Modal attachment point.\r\n            var attachmentPoint = document.createElement('div');\r\n            attachmentPoint.classList.add('modal-preset');\r\n            triggerelement.forEach((element) => element.addEventListener('click', () => {\r\n                var presetid = element.getAttribute('data-presetid');\r\n                var presettitle = element.getAttribute('data-presettitle');\r\n                var params = {'presetid': presetid, 'courseid': THIS.courseid, 'section': THIS.section};\r\n\r\n                document.body.prepend(attachmentPoint);\r\n\r\n                var modalFn;\r\n                if (typeof PresetModal.registerModalType == 'undefined') {\r\n                    modalFn = Modal.create({\r\n                        type: ModalPreset.TYPE,\r\n                        title: Str.get_string('presetmodaltitle', 'pulse', {'title': presettitle}),\r\n                        body: Fragment.loadFragment('mod_pulse', 'get_preset_preview', THIS.contextId, params),\r\n                        large: true,\r\n                    });\r\n                } else {\r\n                    modalFn = PresetModal.create({\r\n                        title: Str.get_string('presetmodaltitle', 'pulse', {'title': presettitle}),\r\n                        body: Fragment.loadFragment('mod_pulse', 'get_preset_preview', THIS.contextId, params),\r\n                        large: true,\r\n                    });\r\n                }\r\n\r\n                modalFn.then(modal => {\r\n                    // Make the modal attachment point to overcome the restriction access condition.\r\n                    modal.attachmentPoint = attachmentPoint;\r\n                    modal.show();\r\n                    modal.getRoot().on(ModalEvents.bodyRendered, function() {\r\n\r\n                        if (modal.getRoot().get(0).querySelector(\"#id_availabilityconditionsjson\") != null) {\r\n                            THIS.reinitAvailability(SELECTOR.presetAvailability);\r\n                        }\r\n                        THIS.fieldChangedEvent();\r\n                    });\r\n                    // Destroy the modal on hidden to reload the editors.\r\n                    modal.getRoot().on(ModalEvents.hidden, function() {\r\n                        modal.getRoot().get(0).querySelectorAll('form textarea').forEach(target => {\r\n                            if (typeof tinyMCE !== 'undefined' && tinyMCE.EditorManager.get(target.id)) { // eslint-disable-line\r\n                                tinyMCE.EditorManager.get(target.id).remove(); // eslint-disable-line\r\n                            }\r\n                        });\r\n                        modal.destroy.bind(modal);\r\n                        // THIS.reinitAvailability();\r\n                    });\r\n\r\n                    // Apply and customize method.\r\n                    modal.getRoot().on(PresetEvents.customize, () => {\r\n                        var modform = document.querySelector('#mod-pulse-form');\r\n                        var modformdata = new FormData(modform);\r\n                        modal.getRoot().get(0).querySelectorAll('form').forEach(form => {\r\n                            var formdata = new FormData(form);\r\n                            formdata = new URLSearchParams(formdata).toString();\r\n                            var pageparams = new URLSearchParams(modformdata).toString();\r\n                            params = {formdata: formdata, pageparams: pageparams};\r\n\r\n                            Loadingicon.addIconToContainer(this.loadIconElement);\r\n                            THIS.disableButtons();\r\n                            THIS.applyCustomize(params, THIS.contextId, modal);\r\n                        });\r\n                    });\r\n                    // Apply and save method.\r\n                    modal.getRoot().on(PresetEvents.save, (e) => {\r\n                        e.preventDefault();\r\n                        Loadingicon.addIconToContainer(this.loadIconElement);\r\n                        THIS.disableButtons();\r\n                        var formdata = {};\r\n                        modal.getRoot().get(0).querySelectorAll('form').forEach(form => {\r\n                            formdata = new FormData(form);\r\n                            this.restorePreset(formdata, THIS.contextId);\r\n                        });\r\n                    });\r\n                    return true;\r\n                }).catch(Notification.exception);\r\n            }));\r\n        };\r\n\r\n\r\n        Preset.prototype.fieldChangedEvent = () => {\r\n            var confParam = document.getElementById(\"preset-configurable-params\");\r\n            var reminders = ['first', 'second', 'recurring'];\r\n            var methods = ['fixed', 'relative'];\r\n            var fieldName, changeinput, id, changeName, split;\r\n            confParam.querySelectorAll('input, select, textarea').forEach(field => {\r\n                field.addEventListener('change', (event) => {\r\n                    fieldName = event.target.getAttribute('name');\r\n                    if (confParam.querySelector('input[name=\"' + fieldName + '_changed\"]') !== null) {\r\n                        confParam.querySelector('input[name=\"' + fieldName + '_changed\"]').value = true;\r\n                    }\r\n                });\r\n            });\r\n\r\n            reminders.forEach(reminder => {\r\n                confParam.querySelectorAll('[name=\"' + reminder + '_schedule\"').forEach(schedule => {\r\n                    schedule.addEventListener('change', (e) => {\r\n                        changeName = e.target.getAttribute('name');\r\n                        changeinput = 'input[name=\"' + changeName + '_arr_changed\"]';\r\n                        confParam.querySelector(changeinput).value = true;\r\n                    });\r\n                });\r\n                methods.forEach(method => {\r\n                    id = reminder + \"_\" + method + \"date\";\r\n                    confParam.querySelectorAll('[name*=\"' + id + '\"]').forEach(opt => {\r\n                        opt.addEventListener('change', (e) => {\r\n                            split = e.target.getAttribute('name').split('[');\r\n                            changeName = (split.hasOwnProperty(1)) ? split[0] : split;\r\n                            changeinput = 'input[name=\"' + changeName + '_changed\"]';\r\n                            confParam.querySelector(changeinput).value = true;\r\n                        });\r\n                    });\r\n                });\r\n            });\r\n        };\r\n\r\n        /**\r\n         * Reinitialize the availability javascript.\r\n         * @param {string} selector\r\n         */\r\n        Preset.prototype.reinitAvailability = function(selector = '.availability-field') {\r\n            if (typeof M.core_availability.form !== \"undefined\" &&\r\n                document.getElementById('id_availabilityconditionsjson') !== null) {\r\n                this.resetRestrictPlugins();\r\n                document.querySelectorAll(selector).forEach((field) => field.parentNode.removeChild(field));\r\n                M.core_availability.form.init();\r\n            }\r\n        };\r\n\r\n        Preset.prototype.resetRestrictPlugins = function() {\r\n            if (typeof M.core_availability.form !== \"undefined\" &&\r\n                document.getElementById('id_availabilityconditionsjson') !== null) {\r\n                M.core_availability.form.restrictByGroup = null;\r\n                var availabilityPlugins = (typeof M.core_availability.form.plugins !== 'undefined')\r\n                    ? M.core_availability.form.plugins : {};\r\n                var plugin = '';\r\n                for (var i in availabilityPlugins) {\r\n                    plugin = \"availability_\" + i;\r\n                    if (M.hasOwnProperty(plugin)) {\r\n                        M[plugin].form.addedEvents = false;\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Apply and customize triggered using fragment. Response will replaced with current mod form.\r\n         * @param  {string} params\r\n         * @param  {int} contextID\r\n         * @param  {object} modal\r\n         */\r\n        Preset.prototype.applyCustomize = function(params, contextID, modal) {\r\n            Fragment.loadFragment('mod_pulse', 'apply_preset', contextID, params).done((html, js) => {\r\n                modal.destroy();\r\n                // Reset the availability to work for upcoming response html.\r\n                this.resetRestrictPlugins();\r\n                this.handleFormSubmissionResponse(html, js);\r\n            });\r\n        };\r\n\r\n        /**\r\n         * Disable the modal save and customize buttons to prevent reinit.\r\n         */\r\n        Preset.prototype.disableButtons = function() {\r\n            var buttons = document.querySelectorAll(this.actionbuttons);\r\n            for (let $i in buttons) {\r\n                buttons[$i].disabled = true;\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Handle the loaded fragment output of customize method pulse mod.\r\n         * @param  {html} data\r\n         * @param  {string} js\r\n         */\r\n        Preset.prototype.handleFormSubmissionResponse = (data, js) => {\r\n            var newform = document.createElement('div');\r\n            newform.innerHTML = data;\r\n            Templates.replaceNode('[action=\"modedit.php\"]', data, js);\r\n\r\n        };\r\n\r\n        /**\r\n         * Initiate the apply and save method to create the pulse module with custom daa.\r\n         * @param  {FormData} formdata\r\n         * @param  {int} contextid\r\n         */\r\n        Preset.prototype.restorePreset = (formdata, contextid) => {\r\n            var formdatastr = new URLSearchParams(formdata).toString();\r\n            var promises = AJAX.call([{\r\n                methodname: 'mod_pulse_apply_presets',\r\n                args: {contextid: contextid, formdata: formdatastr}\r\n            }]);\r\n\r\n            promises[0].done((response) => {\r\n                response = JSON.parse(response);\r\n                if (typeof response.url != 'undefined') {\r\n                    window.location.href = response.url;\r\n                }\r\n            });\r\n        };\r\n\r\n        /**\r\n         * Load list of available presets.\r\n         */\r\n        Preset.prototype.loadPresetsList = function() {\r\n            var listParent = document.getElementById(this.listElement.selector);\r\n\r\n            if (listParent !== null) {\r\n                if (listParent.getAttribute(this.listElement.loaded) == 'false') {\r\n                    Fragment.loadFragment('mod_pulse', 'get_presetslist', this.contextId, {'courseid': this.courseid})\r\n                        .done((html, js) => {\r\n                            Templates.replaceNodeContents(listParent, html, js);\r\n                            listParent.setAttribute(this.listElement.loaded, 'true');\r\n                            this.setupmodal();\r\n                        });\r\n                }\r\n            }\r\n        };\r\n\r\n        return {\r\n            init: (contextId, courseid, section) => {\r\n                new Preset(contextId, courseid, section);\r\n            }\r\n        };\r\n    });\r\n"],"names":["define","$","Modal","ModalPreset","PresetEvents","Str","Fragment","AJAX","Templates","Loadingicon","Notification","ModalEvents","PresetModal","SELECTOR","Preset","contextId","courseid","section","loadPresetsList","prototype","listElement","pageparams","loadIconElement","actionbuttons","setupmodal","THIS","this","triggerelement","document","querySelectorAll","attachmentPoint","createElement","classList","add","forEach","element","addEventListener","presetid","getAttribute","presettitle","params","body","prepend","registerModalType","create","type","TYPE","title","get_string","loadFragment","large","then","modal","show","getRoot","on","bodyRendered","get","querySelector","reinitAvailability","fieldChangedEvent","hidden","target","tinyMCE","EditorManager","id","remove","destroy","bind","customize","modform","modformdata","FormData","form","formdata","URLSearchParams","toString","addIconToContainer","disableButtons","applyCustomize","save","e","preventDefault","restorePreset","catch","exception","fieldName","changeinput","changeName","split","confParam","getElementById","methods","field","event","value","reminder","schedule","method","opt","hasOwnProperty","selector","M","core_availability","resetRestrictPlugins","parentNode","removeChild","init","restrictByGroup","availabilityPlugins","plugins","plugin","i","addedEvents","contextID","done","html","js","handleFormSubmissionResponse","buttons","$i","disabled","data","innerHTML","replaceNode","contextid","formdatastr","call","methodname","args","response","JSON","parse","url","window","location","href","listParent","loaded","replaceNodeContents","setAttribute"],"mappings":"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"}