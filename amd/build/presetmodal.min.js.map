{"version":3,"file":"presetmodal.min.js","sources":["../src/presetmodal.js"],"sourcesContent":["import Modal from 'core/modal';\r\nimport * as CustomEvents from 'core/custom_interaction_events';\r\nimport * as PresetEvents from 'mod_pulse/events';\r\n\r\nconst SELECTORS = {\r\n    SAVE_BUTTON: '[data-action=\"save\"]',\r\n    CUSTOMIZE_BUTTON: '[data-action=\"customize\"]',\r\n    CANCEL_BUTTON: '[data-action=\"cancel\"]',\r\n};\r\n\r\nexport default class PresetModal extends Modal {\r\n\r\n    static TYPE = 'PulsePresetModal';\r\n    static TEMPLATE = 'mod_pulse/modal_preset';\r\n\r\n    registerEventListeners() {\r\n        // Apply parent event listeners.\r\n        super.registerEventListeners(this);\r\n\r\n        this.getModal().on(CustomEvents.events.activate, SELECTORS.SAVE_BUTTON, function (event, data) {\r\n            // Load the backupfile.\r\n            document.querySelectorAll('.preset-config-params form.mform').forEach(form => {\r\n                form.importmethod.value = 'save';\r\n                form.addEventListener('submit', function (e) {\r\n                    e.preventDefault();\r\n                });\r\n            });\r\n\r\n            if (document.querySelectorAll('.preset-config-params [data-fieldtype=\"submit\"] input').length != 0) {\r\n                document.querySelectorAll('.preset-config-params [data-fieldtype=\"submit\"] input')[0].click();\r\n            }\r\n\r\n            var approveEvent = $.Event(PresetEvents.save);\r\n            this.getRoot().trigger(approveEvent, this);\r\n\r\n            if (!approveEvent.isDefaultPrevented()) {\r\n                this.destroy();\r\n                data.originalEvent.preventDefault();\r\n            }\r\n            event.preventDefault();\r\n        }.bind(this));\r\n\r\n\r\n        this.getModal().on(CustomEvents.events.activate, SELECTORS.CUSTOMIZE_BUTTON, function (event, data) {\r\n            // Add your logic for when the login button is clicked. This could include the form validation,\r\n            document.querySelectorAll('.preset-config-params form.mform').forEach(form => {\r\n                form.importmethod.value = 'customize';\r\n            });\r\n\r\n            var customizeEvent = $.Event(PresetEvents.customize);\r\n            this.getRoot().trigger(customizeEvent, this);\r\n\r\n            if (!customizeEvent.isDefaultPrevented()) {\r\n                data.originalEvent.preventDefault();\r\n            }\r\n            event.preventDefault();\r\n\r\n        }.bind(this));\r\n\r\n        this.getModal().on(CustomEvents.events.activate, SELECTORS.CANCEL_BUTTON, function () {\r\n            this.destroy();\r\n        }.bind(this));\r\n    };\r\n}\r\n\r\nPresetModal.registerModalType();\r\n"],"names":["SELECTORS","PresetModal","Modal","registerEventListeners","this","getModal","on","CustomEvents","events","activate","event","data","document","querySelectorAll","forEach","form","importmethod","value","addEventListener","e","preventDefault","length","click","approveEvent","$","Event","PresetEvents","save","getRoot","trigger","isDefaultPrevented","destroy","originalEvent","bind","customizeEvent","customize","registerModalType"],"mappings":"s/CAIMA,sBACW,uBADXA,2BAEgB,4BAFhBA,wBAGa,+BAGEC,oBAAoBC,eAKrCC,+BAEUA,uBAAuBC,WAExBC,WAAWC,GAAGC,aAAaC,OAAOC,SAAUT,sBAAuB,SAAUU,MAAOC,MAErFC,SAASC,iBAAiB,oCAAoCC,SAAQC,OAClEA,KAAKC,aAAaC,MAAQ,OAC1BF,KAAKG,iBAAiB,UAAU,SAAUC,GACtCA,EAAEC,uBAIuF,GAA7FR,SAASC,iBAAiB,yDAAyDQ,QACnFT,SAASC,iBAAiB,yDAAyD,GAAGS,YAGtFC,aAAeC,EAAEC,MAAMC,aAAaC,WACnCC,UAAUC,QAAQN,aAAcnB,MAEhCmB,aAAaO,4BACTC,UACLpB,KAAKqB,cAAcZ,kBAEvBV,MAAMU,kBACRa,KAAK7B,YAGFC,WAAWC,GAAGC,aAAaC,OAAOC,SAAUT,2BAA4B,SAAUU,MAAOC,MAE1FC,SAASC,iBAAiB,oCAAoCC,SAAQC,OAClEA,KAAKC,aAAaC,MAAQ,mBAG1BiB,eAAiBV,EAAEC,MAAMC,aAAaS,gBACrCP,UAAUC,QAAQK,eAAgB9B,MAElC8B,eAAeJ,sBAChBnB,KAAKqB,cAAcZ,iBAEvBV,MAAMU,kBAERa,KAAK7B,YAEFC,WAAWC,GAAGC,aAAaC,OAAOC,SAAUT,wBAAyB,gBACjE+B,WACPE,KAAK7B,4DAnDMH,mBAEH,oCAFGA,uBAGC,0BAoDtBA,YAAYmC"}